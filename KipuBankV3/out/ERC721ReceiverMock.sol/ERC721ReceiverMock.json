{"abi":[{"type":"constructor","inputs":[{"name":"retval","type":"bytes4","internalType":"bytes4"},{"name":"error","type":"uint8","internalType":"enum ERC721ReceiverMock.RevertType"}],"stateMutability":"nonpayable"},{"type":"function","name":"onERC721Received","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"event","name":"Received","inputs":[{"name":"operator","type":"address","indexed":false,"internalType":"address"},{"name":"from","type":"address","indexed":false,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"gas","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"CustomError","inputs":[{"name":"","type":"bytes4","internalType":"bytes4"}]}],"bytecode":{"object":"0x60c03461008c57601f61037438819003918201601f19168301916001600160401b0383118484101761009057808492604094855283398101031261008c578051906001600160e01b03198216820361008c576020015190600582101561008c5760805260a0526040516102cf90816100a5823960805181818161015f015261020d015260a0518160c80152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608060048036101561000f575f80fd5b5f3560e01c63150b7a0214610022575f80fd5b34610271576080366003190112610271576001600160a01b0381358181169390849003610271576024938435928316809303610271576064359267ffffffffffffffff92838511610271573660238601121561027157848601359184831161028757601f199283603f81601f840116011683019583871090871117610275576040958652808352602096368a838301011161027157815f928b8a930183870137840101527f0000000000000000000000000000000000000000000000000000000000000000600581101561025f57600181036100fc575f80fd5b6002810361014657855162461bcd60e51b8152808901889052601d818b01527f45524337323152656365697665724d6f636b3a20726576657274696e670000006044820152606490fd5b949594600381036101905786516301990d6f60e61b81527f00000000000000000000000000000000000000000000000000000000000000006001600160e01b031916818a01528990fd5b87808a929897981461024e5750505a908551948552868501526044358585015260a060608501528151918260a0860152865f5b84811061023a5750867f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b0388760c08189601f8a8a5f868387010152608085015201168101030190a1517f00000000000000000000000000000000000000000000000000000000000000006001600160e01b0319168152f35b82810182015187820160c0015281016101c3565b601290634e487b7160e01b5f52525ffd5b88602189634e487b7160e01b5f52525ffd5b5f80fd5b88604189634e487b7160e01b5f52525ffd5b87604188634e487b7160e01b5f52525ffdfea26469706673582212208053a74d109c7193ed6f0a0772c8048617a51589a01d81058b912af694d1447964736f6c63430008180033","sourceMap":"132:1189:192:-:0;;;;;;;;;;;;;-1:-1:-1;;132:1189:192;;;;-1:-1:-1;;;;;132:1189:192;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;132:1189:192;;;;;;;;;;;;;;;;591:16;;617:14;;132:1189;;;;;;;;591:16;132:1189;;;;;;;;;;617:14;132:1189;;;;;;;-1:-1:-1;132:1189:192;;;;;;-1:-1:-1;132:1189:192;;;;;-1:-1:-1;132:1189:192","linkReferences":{}},"deployedBytecode":{"object":"0x608060048036101561000f575f80fd5b5f3560e01c63150b7a0214610022575f80fd5b34610271576080366003190112610271576001600160a01b0381358181169390849003610271576024938435928316809303610271576064359267ffffffffffffffff92838511610271573660238601121561027157848601359184831161028757601f199283603f81601f840116011683019583871090871117610275576040958652808352602096368a838301011161027157815f928b8a930183870137840101527f0000000000000000000000000000000000000000000000000000000000000000600581101561025f57600181036100fc575f80fd5b6002810361014657855162461bcd60e51b8152808901889052601d818b01527f45524337323152656365697665724d6f636b3a20726576657274696e670000006044820152606490fd5b949594600381036101905786516301990d6f60e61b81527f00000000000000000000000000000000000000000000000000000000000000006001600160e01b031916818a01528990fd5b87808a929897981461024e5750505a908551948552868501526044358585015260a060608501528151918260a0860152865f5b84811061023a5750867f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b0388760c08189601f8a8a5f868387010152608085015201168101030190a1517f00000000000000000000000000000000000000000000000000000000000000006001600160e01b0319168152f35b82810182015187820160c0015281016101c3565b601290634e487b7160e01b5f52525ffd5b88602189634e487b7160e01b5f52525ffd5b5f80fd5b88604189634e487b7160e01b5f52525ffd5b87604188634e487b7160e01b5f52525ffdfea26469706673582212208053a74d109c7193ed6f0a0772c8048617a51589a01d81058b912af694d1447964736f6c63430008180033","sourceMap":"132:1189:192:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;132:1189:192;;;;-1:-1:-1;;;;;132:1189:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:6;132:1189;;;;;;;814:41;;132:1189;;;871:8;;810:413;910:28;900:38;;910:28;;132:1189;;-1:-1:-1;;;954:39:192;;;;;132:1189;;;;;;;;;;;;;;;954:39;896:327;1014:42;;;1024:32;1014:42;;1024:32;;132:1189;;-1:-1:-1;;;1079:20:192;;1091:7;-1:-1:-1;;;;;;132:1189:192;1079:20;;;132:1189;;;1079:20;1010:213;1120:26;;;;;;;;1116:107;;1010:213;;1278:9;132:1189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:50;132:1189;;;;;;;;;;;;;;;;;;;;;;1238:50;;;;132:1189;1305:7;-1:-1:-1;;;;;;132:1189:192;;;;;;;;;;;;;;;;;;;;;1116:107;132:1189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{},"immutableReferences":{"87729":[{"start":351,"length":32},{"start":525,"length":32}],"87732":[{"start":200,"length":32}]}},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"retval\",\"type\":\"bytes4\"},{\"internalType\":\"enum ERC721ReceiverMock.RevertType\",\"name\":\"error\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"CustomError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/openzeppelin-contracts/contracts/mocks/token/ERC721ReceiverMock.sol\":\"ERC721ReceiverMock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=src/lib/openzeppelin-contracts/contracts/\",\":chainlink/=src/lib/chainlink/\",\":ds-test/=src/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=src/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=src/lib/forge-std/src/\",\":halmos-cheatcodes/=src/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=src/lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"src/lib/openzeppelin-contracts/contracts/mocks/token/ERC721ReceiverMock.sol\":{\"keccak256\":\"0x9b3e6c830c63470504f3e7f27fdd1f7ec7cdc6f6a9d0d8f305dfc6bfd40394ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aa06c418433ed1b672a6a2e82cee2958d5146d36d5e8bc9d317794afa3ea377\",\"dweb:/ipfs/QmREzEydMEeFo9mt8LU2HBgEznUyX5nSYivDiSEE5KggBw\"]},\"src/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"retval","type":"bytes4"},{"internalType":"enum ERC721ReceiverMock.RevertType","name":"error","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"type":"error","name":"CustomError"},{"inputs":[{"internalType":"address","name":"operator","type":"address","indexed":false},{"internalType":"address","name":"from","type":"address","indexed":false},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"uint256","name":"gas","type":"uint256","indexed":false}],"type":"event","name":"Received","anonymous":false},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=src/lib/openzeppelin-contracts/contracts/","chainlink/=src/lib/chainlink/","ds-test/=src/lib/forge-std/lib/ds-test/src/","erc4626-tests/=src/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=src/lib/forge-std/src/","halmos-cheatcodes/=src/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=src/lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/lib/openzeppelin-contracts/contracts/mocks/token/ERC721ReceiverMock.sol":"ERC721ReceiverMock"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/lib/openzeppelin-contracts/contracts/mocks/token/ERC721ReceiverMock.sol":{"keccak256":"0x9b3e6c830c63470504f3e7f27fdd1f7ec7cdc6f6a9d0d8f305dfc6bfd40394ed","urls":["bzz-raw://4aa06c418433ed1b672a6a2e82cee2958d5146d36d5e8bc9d317794afa3ea377","dweb:/ipfs/QmREzEydMEeFo9mt8LU2HBgEznUyX5nSYivDiSEE5KggBw"],"license":"MIT"},"src/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49","urls":["bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22","dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"],"license":"MIT"}},"version":1},"id":192}