{"abi":[{"type":"function","name":"onTransferReceived","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onTransferReceived(address,address,uint256,bytes)":"88a7ca5c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support {IERC1363-transferAndCall} or {IERC1363-transferFromAndCall} from {ERC1363} token contracts.\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"amount\":\"uint256 The amount of tokens transferred\",\"data\":\"bytes Additional data with no specified format\",\"from\":\"address The address which are token transferred from\",\"operator\":\"address The address which called `transferAndCall` or `transferFromAndCall` function\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=src/lib/openzeppelin-contracts/contracts/\",\":chainlink/=src/lib/chainlink/\",\":ds-test/=src/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=src/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=src/lib/forge-std/src/\",\":halmos-cheatcodes/=src/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=src/lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"src/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0x1b0503c0f676f61866e76acf7905dc98d35503b9f4ef5c62d4e86f8ff070f1c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9c9c632db6132254b0d7a89f612a459f53056b9d8b31c19dbb57673a17ef294\",\"dweb:/ipfs/QmaRPuGcrWp4Ye9vrw1xkgRiVJasNAJxF7x8QAFMvsXfnC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onTransferReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"onTransferReceived(address,address,uint256,bytes)":{"details":"Any ERC1363 smart contract calls this function on the recipient after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.","params":{"amount":"uint256 The amount of tokens transferred","data":"bytes Additional data with no specified format","from":"address The address which are token transferred from","operator":"address The address which called `transferAndCall` or `transferFromAndCall` function"},"returns":{"_0":"`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` unless throwing"}}},"version":1},"userdoc":{"kind":"user","methods":{"onTransferReceived(address,address,uint256,bytes)":{"notice":"Handle the receipt of ERC1363 tokens"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=src/lib/openzeppelin-contracts/contracts/","chainlink/=src/lib/chainlink/","ds-test/=src/lib/forge-std/lib/ds-test/src/","erc4626-tests/=src/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=src/lib/forge-std/src/","halmos-cheatcodes/=src/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=src/lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol":"IERC1363Receiver"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol":{"keccak256":"0x1b0503c0f676f61866e76acf7905dc98d35503b9f4ef5c62d4e86f8ff070f1c8","urls":["bzz-raw://f9c9c632db6132254b0d7a89f612a459f53056b9d8b31c19dbb57673a17ef294","dweb:/ipfs/QmaRPuGcrWp4Ye9vrw1xkgRiVJasNAJxF7x8QAFMvsXfnC"],"license":"MIT"}},"version":1},"id":95}