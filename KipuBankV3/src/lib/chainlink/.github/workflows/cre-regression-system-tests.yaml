name: CRE Regression System Tests

on:
  workflow_dispatch:
    inputs:
      ecr_name:
        description: "The name of the ECR repository to pull the image from, defaults to 'chainlink'"
        required: false
        type: string
        default: "chainlink"
      chainlink_image_tag:
        required: true
        type: string
        description: "The tag of the Chainlink image to use for the tests."
      chainlink_version:
        required: true
        type: string
        description: "The version of Chainlink repository to use for the tests."
        default: "develop"
  workflow_call:
    inputs:
      ecr_name:
        description: "The name of the ECR repository to pull the image from, defaults to 'chainlink'"
        required: false
        type: string
        default: "chainlink"
      chainlink_image_tag:
        required: true
        type: string
        description: "The tag of the Chainlink image to use for the tests."
      chainlink_version:
        required: true
        type: string
        description: "The version of Chainlink repository to use for the tests."
        default: "develop"

jobs:
  define-test-matrix:
    runs-on: runs-on=${{ github.run_id }}/cpu=8/ram=32/family=m6i+m5.*/spot=false/image=ubuntu24-full-x64/extras=s3-cache+tmpfs
    outputs:
      matrix: ${{ steps.define-matrix.outputs.matrix }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.chainlink_version }}
          persist-credentials: false

      - name: Enable S3 Cache for Self-Hosted Runners
        # these env vars are set (and exposed) when it is a self-hosted runner with extras=s3-cache
        if: ${{ env.RUNS_ON_INSTANCE_ID != '' && env.ACTIONS_CACHE_URL != '' }}
        uses: runs-on/action@66d4449b717b5462159659523d1241051ff470b9 # v1

      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: system-tests/tests/go.mod
          cache: true

      - name: Define test matrix
        id: define-matrix
        shell: bash
        working-directory: system-tests/tests
        run: |
          test_names=$(go test \
          github.com/smartcontractkit/chainlink/system-tests/tests/regression/cre \
           -list . | grep -v 'ok' | grep -v '^$')

          # generate IDs for each test
          tests=$(echo "$test_names" | jq -R -s '
            split("\n") | map(select(length>0))
            | to_entries
            | map({
                test_name: .value,
                test_id: .key,
                cre_version: (if (.value | test("V1")) then "v1" else "v2" end)
              })
          ')

          tests=$(echo "$tests" | jq -c .)
          echo "matrix=$tests" | tee -a "${GITHUB_OUTPUT}"

  run-system-tests:
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        tests: ${{fromJson(needs.define-test-matrix.outputs.matrix)}}
    needs: [define-test-matrix]
    # we need a `test_id` and `run_attempt` here to stop runner stealing
    # see: https://runs-on.com/guides/troubleshoot/#runner-stealing-and-matrix-jobs
    runs-on: runs-on=${{ github.run_id }}-${{ matrix.tests.test_id }}-${{ github.run_attempt }}/cpu=16/ram=64/family=m6i+m5.*/spot=false/image=ubuntu24-full-x64/extras=s3-cache+tmpfs
    environment: "integration"
    timeout-minutes: 60
    env:
      ENABLE_AUTO_QUARANTINE: "true"
      # override chip ingress image to use remote image. We have added this env var here, instead of the "Start local CRE" step, because
      # Beholder stack will be started only for the Beholder tests
      CHIP_INGRESS_IMAGE: ${{ secrets.AWS_ACCOUNT_ID_PROD }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/atlas-chip-ingress:bbac3c825b061546980fa9d7dc0f3e8c34347bcf
      BILLING_PLATFORM_SERVICE_IMAGE: ${{ secrets.AWS_ACCOUNT_ID_PROD }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/billing-platform-service:v1.45.0

    steps:
      - name: Enable S3 Cache for Self-Hosted Runners
        # these env vars are set (and exposed) when it is a self-hosted runner with extras=s3-cache
        if: ${{ env.RUNS_ON_INSTANCE_ID != '' && env.ACTIONS_CACHE_URL != '' }}
        uses: runs-on/action@66d4449b717b5462159659523d1241051ff470b9 # v1

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.chainlink_version }}
          persist-credentials: false

      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: system-tests/tests/go.mod
          cache: true

      # We need to login to ECR to allow the test to pull the Job Distributor (main), Chip Ingress (main) and Chainlink (sdlc) images
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          aws-region: ${{ secrets.QA_AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_CTF_READ_ACCESS_ROLE_ARN }}
          role-duration-seconds: 1800
          mask-aws-account-id: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: ${{ format('{0},{1}', secrets.QA_AWS_ACCOUNT_NUMBER, secrets.AWS_ACCOUNT_ID_PROD) }}
        env:
          AWS_REGION: ${{ secrets.QA_AWS_REGION }}

      - name: Set up gotestsum
        shell: bash
        run: |
          echo "::startgroup::Install gotestsum"
          go install gotest.tools/gotestsum@v1.12.3
          echo "::endgroup::"

      - name: Start local CRE${{ matrix.tests.cre_version }}
        shell: bash
        id: start-local-cre
        env:
          E2E_JD_IMAGE: "${{ secrets.AWS_ACCOUNT_ID_PROD }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/job-distributor"
          E2E_JD_VERSION: "0.12.7"
          E2E_TEST_CHAINLINK_IMAGE: "${{ secrets.QA_AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.QA_AWS_REGION }}.amazonaws.com/${{ inputs.ecr_name }}"
          E2E_TEST_CHAINLINK_VERSION: ${{ inputs.chainlink_image_tag != '' && inputs.chainlink_image_tag || inputs.chainlink_version }}
          CTF_CONFIGS: configs/workflow-gateway-capabilities-don.toml
          CRE_VERSION: ${{ matrix.tests.cre_version }}
          TEST_NAME: ${{ matrix.tests.test_name }}
        run: |
          cd core/scripts/cre/environment

          # Start CRE with the appropriate contracts version (i.e. Workflow/CapabilityRegistry)
          if [[ "${CRE_VERSION}" == "v1" ]]; then
            echo "Starting CRE with v1 contracts for test: '${TEST_NAME}' and configs: '${CTF_CONFIGS}'"
            go run . env start --with-plugins-docker-image "${E2E_TEST_CHAINLINK_IMAGE}:${E2E_TEST_CHAINLINK_VERSION}"
          else
            echo "Starting CRE with v2 contracts for test: '${TEST_NAME}' and configs: '${CTF_CONFIGS}'"
            go run . env start --with-plugins-docker-image "${E2E_TEST_CHAINLINK_IMAGE}:${E2E_TEST_CHAINLINK_VERSION}" --with-contracts-version v2
          fi

          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "Error: failed to start local CRE ${CRE_VERSION}, exit code $exit_code"
            exit $exit_code
          fi

      - name: Run CRE${{ matrix.tests.cre_version }} Regression system tests
        id: run-regression-tests
        shell: bash
        working-directory: system-tests/tests
        env:
          TEST_NAME: ${{ matrix.tests.test_name }}
          TEST_TIMEOUT: 30m
        run: |
          echo "Starting test: '${TEST_NAME}'"
          echo "⚠️⚠️⚠️ Add 'skip-e2e-regression' label to skip this step if necessary ⚠️⚠️⚠️"

          gotestsum \
            --jsonfile=/tmp/gotest-regression.log \
            --junitfile=/tmp/junit-report-regression.xml \
            --format=github-actions \
            -- \
            -v -run "^(${TEST_NAME})$" -timeout ${TEST_TIMEOUT} -count=1 -parallel=1 \
            github.com/smartcontractkit/chainlink/system-tests/tests/regression/cre

          echo "⚠️⚠️⚠️ Add 'skip-e2e-regression' label to skip this step if necessary ⚠️⚠️⚠️"
          exit_code=$?
          if [ $exit_code -eq 0 ]; then
            echo "tests_result=✅ Tests passed" >> $GITHUB_OUTPUT
          fi
          exit $exit_code

      - name: Process and upload flaky Regression tests results (${{ steps.run-regression-tests.outputs.tests_result }})
        if: ${{ !cancelled() }}
        uses: smartcontractkit/.github/actions/branch-out-upload@branch-out-upload/0.1.0
        with:
          junit-file-path: "/tmp/junit-report-regression.xml"
          trunk-org-slug: chainlink
          trunk-token: ${{ secrets.TRUNK_API_KEY }}
          trunk-previous-step-outcome: ${{ steps.run-regression-tests.outcome }}
          trunk-job-url: ${{ format('https://github.com/{0}/actions/runs/{1}/job/{2}/attempts/{3}', github.repository, github.run_id, job.check_run_id, github.run_attempt) }}
          # when auto-quarantine is enabled, allow this to determine test failures
          trunk-upload-only: ${{ env.ENABLE_AUTO_QUARANTINE != 'true' }}

      - name: Show Docker containers status
        if: failure()
        shell: bash
        run: docker ps -a

      - name: Save Regression tests Docker logs
        if: failure()
        shell: bash
        working-directory: system-tests/tests/regression/cre
        run: |
          mkdir -p logs
          for c in $(docker ps -a --format '{{.Names}}'); do
            docker logs "$c" > "logs/${c}.log" 2>&1
          done

      - name: Upload all artifacts as single package
        if: failure()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: test-logs-${{ matrix.tests.test_name }}-${{ matrix.tests.topology }}
          path: |
            ./system-tests/tests/regression/cre/logs/
            /tmp/gotest.log
            /tmp/gotest-regression.log
            /tmp/junit-report.xml
