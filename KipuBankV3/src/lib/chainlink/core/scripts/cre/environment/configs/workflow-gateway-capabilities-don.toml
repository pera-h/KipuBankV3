
[[blockchains]]
  type = "anvil"
  chain_id = "1337"
  docker_cmd_params = ["-b", "0.5", "--mixed-mining"]

[[blockchains]]
  type = "anvil"
  chain_id = "2337"
  port = "8546"
  docker_cmd_params = ["-b", "0.5", "--mixed-mining"]

[jd]
  csa_encryption_key = "d1093c0060d50a3c89c189b2e485da5a3ce57f3dcb38ab7e2c0d5f0bb2314a44" # any random 32 byte hex string
  # change to your version
  image = "job-distributor:0.22.1"

[fake]
  port = 8171

#[s3provider]
#  # use all defaults
#  port = 9000
#  console_port = 9001

[infra]
  # either "docker" or "crib"
  type = "docker"

#[infra.crib]
#  namespace = "crib-local"
#  folder_location = "/absolute/path/to/crib/deployments/cre"
#  provider = "kind"  # or "aws"

[[nodesets]]
  nodes = 5
  name = "workflow"
  don_types = ["workflow"]
  override_mode = "all"
  http_port_range_start = 10100

  # index of node in the nodeset that will act as the bootsrap node (not required, but added for visiblity)
  bootstrap_node_index = 0
  # added for visiblity, required always, when don_types include "gateway"
  gateway_node_index = -1

  env_vars = { CL_EVM_CMD = "" }

  capabilities = ["ocr3", "custom-compute", "web-api-trigger", "cron", "http-action", "http-trigger", "consensus", "don-time"]

  [nodesets.chain_capabilities]
    # we want to write only to the home chain, so that we can test whether remote write-evm-2337 capability of the 'capabilities DON' is used
    write-evm = ["1337"]
    read-contract = ["1337"]

  # See ./examples/workflow-don-overrides.toml to learn how to override capability configs

  [nodesets.db]
    image = "postgres:12.0"
    port = 13000

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "core/chainlink.Dockerfile"
      docker_build_args = { "CL_IS_PROD_BUILD" = "false" }
      # image = "chainlink-tmp:latest"
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [P2P]
      EnableExperimentalRageP2P = true

      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      ChipIngressEndpoint = 'chip-ingress:50051'
      ChipIngressInsecureConnection = true
      InsecureConnection = true
      TraceSampleRatio = 1
      HeartbeatInterval = '30s'

      [CRE]
      EnableDKGRecipient = true
      UseLocalTimeProvider = false

      # Remove this bit to allow downloading workflows from remote sources
      [CRE.WorkflowFetcher]
      URL = "file:///home/chainlink/workflows"

      [Billing]
      URL = "billing-platform-service:2223"
      TLSEnabled = false
      """

[[nodesets]]
  nodes = 4
  name = "capabilities"
  don_types = ["capabilities"]
  override_mode = "all"
  http_port_range_start = 10200

  env_vars = { CL_EVM_CMD = "" }

  # there's no bootstrap node in this nodeset
  bootstrap_node_index = -1
  gateway_node_index = -1

  capabilities = ["web-api-target","vault"]

  [nodesets.chain_capabilities]
  write-evm = ["2337"]
  read-contract = ["2337"]
  evm = ["1337"]

  [nodesets.db]
    image = "postgres:12.0"
    port = 13100

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "core/chainlink.Dockerfile"
      docker_build_args = { "CL_IS_PROD_BUILD" = "false" }
      # image = "chainlink-tmp:latest"
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [P2P]
      EnableExperimentalRageP2P = true

      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      ChipIngressEndpoint = 'chip-ingress:50051'
      ChipIngressInsecureConnection = true
      InsecureConnection = true
      TraceSampleRatio = 1
      HeartbeatInterval = '30s'

      [CRE]
      EnableDKGRecipient = true
      UseLocalTimeProvider = false

      # Remove this bit to allow downloading workflows from remote sources
      [CRE.WorkflowFetcher]
      URL = "file:///home/chainlink/workflows"

      [Billing]
      URL = "billing-platform-service:2223"
      TLSEnabled = false
      """

[[nodesets]]
  nodes = 1
  name = "gateway"
  don_types = ["gateway"]
  override_mode = "each"
  http_port_range_start = 10300

  # there's no bootstrap node in this nodeset
  bootstrap_node_index = -1
  gateway_node_index = 0

  env_vars = { CL_EVM_CMD = "" }

  [nodesets.db]
    image = "postgres:12.0"
    port = 13200

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "core/chainlink.Dockerfile"
      docker_build_args = { "CL_IS_PROD_BUILD" = "false" }
      # image = "chainlink-tmp:latest"
      # 5002 is the web API capabilities port for incoming requests
      # 15002 is the vault port for incoming requests
      custom_ports = ["5002:5002","15002:15002"]
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [P2P]
      EnableExperimentalRageP2P = true
      
      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      ChipIngressEndpoint = 'chip-ingress:50051'
      ChipIngressInsecureConnection = true
      InsecureConnection = true
      TraceSampleRatio = 1
      HeartbeatInterval = '30s'

      [CRE]
      EnableDKGRecipient = true
      UseLocalTimeProvider = false

      # Remove this bit to allow downloading workflows from remote sources
      [CRE.WorkflowFetcher]
      URL = "file:///home/chainlink/workflows"
      """
